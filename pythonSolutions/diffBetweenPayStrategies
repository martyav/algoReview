# Given a certain amount to pay all hires, find the difference between the number of people you can hire
# if you pay each of your employees the most or the least amount possible.
#
# 1. You will always have at least one employee, who will be paid one dollar.
# 2. The next hire up must never be paid more than double their immediate subordinate.
# 3. The next hire up must never make less than the sum of their two immediate subordinates.
# 4. You must keep hiring until your next hire's pay matches or exceeds the total money you have left
#    to pay them
#
# Note that, if you have two employees, the second will always be paid either the same as the first
# (0 + 1) or exactly double the first (2 * 1)

def diff_between_pay_strategies(total_money):
  def __hires_per_stingiest_strategy(money):
    nextPayLevel = 1
    pool = money - 1
    payPerHire = [1]
        
    while nextPayLevel < pool:
      if len(payPerHire) == 1:
        nextPayLevel = 1
      else:
        nextPayLevel = payPerHire[-1] + payPerHire[-2]
          
      if nextPayLevel > pool:
        break
      else:
        pool -= nextPayLevel
        payPerHire.append(nextPayLevel)
      
    return len(payPerHire)
        
  def __hires_per_most_generous_strategy(money):
    nextPayLevel = 1
    pool = money - 1
    payPerHire = [1]
        
    while nextPayLevel < pool:
      possiblePay = nextPayLevel * 2
            
      if possiblePay > pool:
        possiblePay = (possiblePay - pool) + nextPayLevel
                
        if len(payPerHire) > 2 and possiblePay > nextPayLevel[-1] + nextPayLevel[-2]:
          break
                
      nextPayLevel = possiblePay
      pool -= nextPayLevel
      payPerHire.append(nextPayLevel)
        
    return len(payPerHire)    
        
  return __hires_per_stingiest_strategy(total_money) - __hires_per_most_generous_strategy(total_money)
